# .gitlab-ci.yml
# Simple GitLab CI pipeline to test AWS credentials

stages:
  - test-aws-credentials

variables:
  # Use the latest AWS CLI image
  AWS_CLI_IMAGE: "amazon/aws-cli:latest"

# Test AWS credentials and basic connectivity
test-aws-credentials:
  stage: test-aws-credentials
  image: $AWS_CLI_IMAGE
  before_script:
    # Install additional tools if needed
    - yum update -y
    - yum install -y jq
  script:
    # Test 1: Verify AWS CLI configuration
    - echo "Testing AWS CLI configuration..."
    - aws --version
    
    # Test 2: Check AWS credentials and region
    - echo "Checking AWS credentials..."
    - aws sts get-caller-identity
    
    # Test 3: List S3 buckets (basic read operation)
    - echo "Testing S3 access..."
    - aws s3 ls || echo "No S3 buckets found or no S3 permissions"
    
    # Test 4: Check EC2 regions (basic EC2 access)
    - echo "Testing EC2 access..."
    - aws ec2 describe-regions --region $AWS_DEFAULT_REGION || echo "No EC2 permissions or invalid region"
    
    # Test 5: Verify the specific region setting
    - echo "Current AWS region: $AWS_DEFAULT_REGION"
    - aws configure list
    
    # Test 6: Check IAM permissions (if available)
    - echo "Testing IAM access..."
    - aws iam get-user 2>/dev/null || echo "No IAM GetUser permissions (this is normal for limited access keys)"
    
  rules:
    # Run on all branches and merge requests
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
  
  # Only fail if critical tests fail
  allow_failure: false
  
  # Add timeout to prevent hanging
  timeout: 5 minutes

# Optional: More comprehensive AWS service tests
test-aws-services:
  stage: test-aws-credentials
  image: $AWS_CLI_IMAGE
  script:
    # Test CloudFormation access
    - echo "Testing CloudFormation access..."
    - aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE --region $AWS_DEFAULT_REGION || echo "No CloudFormation permissions"
    
    # Test Lambda access  
    - echo "Testing Lambda access..."
    - aws lambda list-functions --region $AWS_DEFAULT_REGION || echo "No Lambda permissions"
    
    # Test Systems Manager access
    - echo "Testing Systems Manager access..."
    - aws ssm describe-parameters --region $AWS_DEFAULT_REGION --max-items 5 || echo "No SSM permissions"
    
  # This job can fail without failing the pipeline
  allow_failure: true
  
  # Only run this job manually or when specifically requested
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
    - if: $RUN_EXTENDED_TESTS == "true"

# Optional: Security check job
security-check:
  stage: test-aws-credentials
  image: $AWS_CLI_IMAGE
  script:
    # Check for overly permissive policies (basic check)
    - echo "Running basic security checks..."
    - |
      # Check if the credentials have admin access (should be avoided)
      if aws iam list-attached-user-policies --user-name $(aws sts get-caller-identity --query 'Arn' --output text | cut -d'/' -f2) 2>/dev/null | grep -i admin; then
        echo "WARNING: User may have admin policies attached"
      else
        echo "INFO: No obvious admin policies detected"
      fi
    
    # Verify region matches expected region
    - |
      if [ "$AWS_DEFAULT_REGION" != "us-east-1" ] && [ "$AWS_DEFAULT_REGION" != "us-west-2" ]; then
        echo "INFO: Using region $AWS_DEFAULT_REGION (verify this is intended)"
      fi
      
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual