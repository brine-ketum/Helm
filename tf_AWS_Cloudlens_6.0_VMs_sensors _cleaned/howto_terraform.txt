
# 
#Deploy US 
#
terraform workspace select  us-east-1
terraform workspace list
terraform apply --var-file=".\terraform_ixia_us-east-1.tfvars"  --auto-approve
#Destroy
terraform destroy --var-file=".\terraform_ixia_us-east-1.tfvars" --auto-approve
#
#Deploy Paris
terraform workspace select  eu-west-3
#
terraform workspace list
terraform apply --var-file=".\terraform_ixia_eu-west-3.tfvars"  --auto-approve
#Destroy
terraform destroy --var-file=".\terraform_ixia_eu-west-3.tfvars" --auto-approve

# AWS CLI List all my VMS
$env:AWS_DEFAULT_PROFILE="ks"


aws ec2 describe-instances --query "Reservations[*].Instances[*].{Instance:InstanceId, AZ:Placement.AvailabilityZone, State:State.Name, Private_IP:PrivateIpAddress,Public_IP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value}" --output table --filters "Name=tag:Owner,Values=gustavo.amador-nieto@keysight.com" "Name=tag:Name,Values=gustavo-cl2*" --profile ks --color off

aws ec2 describe-instances --query "Reservations[*].Instances[*].{Instance:InstanceId}" --output text  --filters "Name=tag:Name,Values=gustavo-cl2*" --profile ks | awk '{print}' ORS=' '
aws ec2 describe-instances --query "Reservations[*].Instances[*].{Instance:InstanceId, AZ:Placement.AvailabilityZone, State:State.Name, Private_IP:PrivateIpAddress,Public_IP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value}" --output table --filters "Name=tag:Owner,Values=gustavo.amador-nieto@keysight.com" "Name=tag:Name,Values=gustavo-cl-60-tf1*" --profile ks --color off

aws ec2 describe-security-groups --query "SecurityGroups[*].{Name:GroupName,Id:GroupId}" --output table --color off --filters "Name=ip-permission.cidr,Values='0.0.0.0/0'" "Name=tag:Owner,Values=gustavo.amador-nieto@keysight.com" --profile ks
aws ec2 describe-security-groups --query "SecurityGroups[*].{Id:GroupId}" --filters "Name=ip-permission.cidr,Values='0.0.0.0/0'" "Name=tag:Owner,Values=gustavo.amador-nieto@keysight.com" --profile ks --output text | awk '{print}' ORS=' '
aws ec2 describe-security-groups --query "SecurityGroups[*].{Name:GroupName,Id:GroupId,IngressRules:IpPermissions[*].IpRanges}" --profile ks --output yaml  --group-ids  sg-0147e1d194cd8e431 sg-0916054fdeab02bdd

